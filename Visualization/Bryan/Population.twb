<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.20.0513.2115                               -->
<workbook original-version='18.1' source-build='2019.2.12 (20192.20.0513.2115)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='population (resident population by age group, ethnic and gender)' inline='true' name='federated.1bvbn0j1ixxmud1bdtgue0mhywj1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='resident population by age group, ethnic and gender' name='excel-direct.14hxio40i1e7or1eug4jo0sgj3mb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Downloads/github stuff/BAVP/Datasets/Social (Bryan)/demographics/resident_population_by_ethinicity_and_sex (2015).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.14hxio40i1e7or1eug4jo0sgj3mb' name='population' table='[population$]' type='table'>
          <columns gridOrigin='A1:D361:no:A1:D361:0' header='yes' outcome='2'>
            <column datatype='string' name='Age Group (Years)' ordinal='0' />
            <column datatype='string' name='Ethnicity' ordinal='1' />
            <column datatype='string' name='gender' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Age Group (Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group (Years)]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>Age Group (Years)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ethnicity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ethnicity]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>Ethnicity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D361:no:A1:D361:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Female population' datatype='integer' name='[Calculation_287104543144771584]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [gender] = &quot;Females&quot; THEN [population] END' />
      </column>
      <column caption='Male population' datatype='integer' name='[Female population (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [gender] = &quot;Males&quot; THEN [population] END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.474654' measure-ordering='alphabetic' measure-percentage='0.525346' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Males&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Females&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Population pyramid'>
      <table>
        <view>
          <datasources>
            <datasource caption='population (resident population by age group, ethnic and gender)' name='federated.1bvbn0j1ixxmud1bdtgue0mhywj1' />
          </datasources>
          <datasource-dependencies datasource='federated.1bvbn0j1ixxmud1bdtgue0mhywj1'>
            <column datatype='string' name='[Age Group (Years)]' role='dimension' type='nominal' />
            <column caption='Female population' datatype='integer' name='[Calculation_287104543144771584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [gender] = &quot;Females&quot; THEN [population] END' />
            </column>
            <column datatype='string' name='[Ethnicity]' role='dimension' type='nominal' />
            <column caption='Male population' datatype='integer' name='[Female population (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [gender] = &quot;Males&quot; THEN [population] END' />
            </column>
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[Age Group (Years)]' derivation='None' name='[none:Age Group (Years):nk]' pivot='key' type='nominal' />
            <column-instance column='[Ethnicity]' derivation='None' name='[none:Ethnicity:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_287104543144771584]' derivation='Sum' name='[sum:Calculation_287104543144771584:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Female population (copy)]' derivation='Sum' name='[sum:Female population (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]'>
            <groupfilter function='level-members' level='[none:Ethnicity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Female population (copy):qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Calculation_287104543144771584:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Female population (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Age Group (Years):nk]</rows>
        <cols>([federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Female population (copy):qk] + [federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Calculation_287104543144771584:qk])</cols>
      </table>
      <simple-id uuid='{F0F07D24-1706-4E36-906F-6EFA0BAAD58E}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Population pyramid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Age Group (Years):nk]</field>
            <field>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AA375F8-D8AF-427B-AF36-7A790AB6D1A4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Population pyramid' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
