<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.20.0513.2115                               -->
<workbook original-version='18.1' source-build='2019.2.12 (20192.20.0513.2115)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='population (resident population by age group, ethnic and gender)' inline='true' name='federated.1bvbn0j1ixxmud1bdtgue0mhywj1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='resident population by age group, ethnic and gender' name='excel-direct.14hxio40i1e7or1eug4jo0sgj3mb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Downloads/resident population by age group, ethnic and gender.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.14hxio40i1e7or1eug4jo0sgj3mb' name='population' table='[population$]' type='table'>
          <columns gridOrigin='A1:D361:no:A1:D361:0' header='yes' outcome='2'>
            <column datatype='string' name='Age Group (Years)' ordinal='0' />
            <column datatype='string' name='Ethnicity' ordinal='1' />
            <column datatype='string' name='gender' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Age Group (Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group (Years)]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>Age Group (Years)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ethnicity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ethnicity]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>Ethnicity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D361:no:A1:D361:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Female population' datatype='integer' name='[Calculation_287104543144771584]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [gender] = &quot;Females&quot; THEN [population] END' />
      </column>
      <column caption='Male population' datatype='integer' name='[Female population (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [gender] = &quot;Males&quot; THEN [population] END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.514685' measure-ordering='alphabetic' measure-percentage='0.485315' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Males&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Females&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Population pyramid'>
      <table>
        <view>
          <datasources>
            <datasource caption='population (resident population by age group, ethnic and gender)' name='federated.1bvbn0j1ixxmud1bdtgue0mhywj1' />
          </datasources>
          <datasource-dependencies datasource='federated.1bvbn0j1ixxmud1bdtgue0mhywj1'>
            <column datatype='string' name='[Age Group (Years)]' role='dimension' type='nominal' />
            <column caption='Female population' datatype='integer' name='[Calculation_287104543144771584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [gender] = &quot;Females&quot; THEN [population] END' />
            </column>
            <column datatype='string' name='[Ethnicity]' role='dimension' type='nominal' />
            <column caption='Male population' datatype='integer' name='[Female population (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [gender] = &quot;Males&quot; THEN [population] END' />
            </column>
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[Age Group (Years)]' derivation='None' name='[none:Age Group (Years):nk]' pivot='key' type='nominal' />
            <column-instance column='[Ethnicity]' derivation='None' name='[none:Ethnicity:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_287104543144771584]' derivation='Sum' name='[sum:Calculation_287104543144771584:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Female population (copy)]' derivation='Sum' name='[sum:Female population (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]'>
            <groupfilter function='level-members' level='[none:Ethnicity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Female population (copy):qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Calculation_287104543144771584:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Female population (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Age Group (Years):nk]</rows>
        <cols>([federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Female population (copy):qk] + [federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Calculation_287104543144771584:qk])</cols>
      </table>
      <simple-id uuid='{F0F07D24-1706-4E36-906F-6EFA0BAAD58E}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Population pyramid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Age Group (Years):nk]</field>
            <field>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AA375F8-D8AF-427B-AF36-7A790AB6D1A4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Population pyramid' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
