<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.20.0513.2115                               -->
<workbook original-version='18.1' source-build='2019.2.12 (20192.20.0513.2115)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='population (resident population by age group, ethnic and gender)' inline='true' name='federated.1bvbn0j1ixxmud1bdtgue0mhywj1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='resident population by age group, ethnic and gender' name='excel-direct.14hxio40i1e7or1eug4jo0sgj3mb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Downloads/resident population by age group, ethnic and gender.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.14hxio40i1e7or1eug4jo0sgj3mb' name='population' table='[population$]' type='table'>
          <columns gridOrigin='A1:D361:no:A1:D361:0' header='yes' outcome='2'>
            <column datatype='string' name='Age Group (Years)' ordinal='0' />
            <column datatype='string' name='Ethnicity' ordinal='1' />
            <column datatype='string' name='gender' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Age Group (Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group (Years)]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>Age Group (Years)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ethnicity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ethnicity]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>Ethnicity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D361:no:A1:D361:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Female population' datatype='integer' name='[Calculation_287104543144771584]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [gender] = &quot;Females&quot; THEN [population] END' />
      </column>
      <column caption='Male population' datatype='integer' name='[Female population (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [gender] = &quot;Males&quot; THEN [population] END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.514685' measure-ordering='alphabetic' measure-percentage='0.485315' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Males&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Females&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Population pyramid'>
      <table>
        <view>
          <datasources>
            <datasource caption='population (resident population by age group, ethnic and gender)' name='federated.1bvbn0j1ixxmud1bdtgue0mhywj1' />
          </datasources>
          <datasource-dependencies datasource='federated.1bvbn0j1ixxmud1bdtgue0mhywj1'>
            <column datatype='string' name='[Age Group (Years)]' role='dimension' type='nominal' />
            <column caption='Female population' datatype='integer' name='[Calculation_287104543144771584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [gender] = &quot;Females&quot; THEN [population] END' />
            </column>
            <column datatype='string' name='[Ethnicity]' role='dimension' type='nominal' />
            <column caption='Male population' datatype='integer' name='[Female population (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [gender] = &quot;Males&quot; THEN [population] END' />
            </column>
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[Age Group (Years)]' derivation='None' name='[none:Age Group (Years):nk]' pivot='key' type='nominal' />
            <column-instance column='[Ethnicity]' derivation='None' name='[none:Ethnicity:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_287104543144771584]' derivation='Sum' name='[sum:Calculation_287104543144771584:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Female population (copy)]' derivation='Sum' name='[sum:Female population (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]'>
            <groupfilter function='level-members' level='[none:Ethnicity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Calculation_287104543144771584:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Calculation_287104543144771584:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Female population (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Age Group (Years):nk]</rows>
        <cols>([federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Calculation_287104543144771584:qk] + [federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[sum:Female population (copy):qk])</cols>
      </table>
      <simple-id uuid='{F0F07D24-1706-4E36-906F-6EFA0BAAD58E}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Population pyramid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Age Group (Years):nk]</field>
            <field>[federated.1bvbn0j1ixxmud1bdtgue0mhywj1].[none:Ethnicity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AA375F8-D8AF-427B-AF36-7A790AB6D1A4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Population pyramid' width='384'>
      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
      iQAgCIKQoP4/Bo3MoQgx5dsAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
